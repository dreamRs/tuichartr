% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tuichart.R
\name{tuichart-shiny}
\alias{tuichart-shiny}
\alias{tuichartOutput}
\alias{renderTuichart}
\title{Shiny bindings for tuichart}
\usage{
tuichartOutput(outputId, width = "100\%", height = "400px")

renderTuichart(expr, env = parent.frame(), quoted = FALSE)
}
\arguments{
\item{outputId}{output variable to read from}

\item{width, height}{Must be a valid CSS unit (like \code{'100\%'},
\code{'400px'}, \code{'auto'}) or a number, which will be coerced to a
string and have \code{'px'} appended.}

\item{expr}{An expression that generates a tuichart}

\item{env}{The environment in which to evaluate \code{expr}.}

\item{quoted}{Is \code{expr} a quoted expression (with \code{quote()})? This
is useful if you want to save an expression in a variable.}
}
\description{
Output and render functions for using tuichart within Shiny
applications and interactive Rmd documents.
}
\examples{
if (interactive()) {

  library(shiny)
  library(dplyr)
  library(ggplot2)
  library(tuichartr)

  ui <- fluidPage(
    tags$h2("Include tuichart in Shiny"),
    fluidRow(
      column(
        width = 3,
        checkboxGroupInput(
          inputId = "year",
          label = "Year:",
          choices = c(1999, 2008),
          selected = c(1999, 2008)
        )
      ),
      column(
        width = 9,
        tuichartOutput(outputId = "my_chart")
      )
    )
  )

  server <- function(input, output, session) {

    output$my_chart <- renderTuichart({

      data <- filter(mpg, year \%in\% input$year) \%>\%
        count(manufacturer)

      tuichart("bar") \%>\%
        add_data(data, aes(x = manufacturer, y = n)) \%>\%
        tui_chart(title = "My cool chart") \%>\%
        tui_xAxis(title = "Count") \%>\%
        tui_legend(visible = FALSE) \%>\%
        tui_series(showLabel = TRUE)
    })


  }

  shinyApp(ui, server)
}
}
